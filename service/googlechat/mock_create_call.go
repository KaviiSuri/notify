// Code generated by mockery v2.16.0. DO NOT EDIT.

package googlechat

import (
	mock "github.com/stretchr/testify/mock"
	chat "google.golang.org/api/chat/v1"
	googleapi "google.golang.org/api/googleapi"
)

// mockCreateCall is an autogenerated mock type for the createCall type
type mockCreateCall struct {
	mock.Mock
}

// Do provides a mock function with given fields: _a0
func (_m *mockCreateCall) Do(_a0 ...googleapi.CallOption) (*chat.Message, error) {
	_va := make([]interface{}, len(_a0))
	for _i := range _a0 {
		_va[_i] = _a0[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *chat.Message
	if rf, ok := ret.Get(0).(func(...googleapi.CallOption) *chat.Message); ok {
		r0 = rf(_a0...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*chat.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(...googleapi.CallOption) error); ok {
		r1 = rf(_a0...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockCreateCall interface {
	mock.TestingT
	Cleanup(func())
}

// newMockCreateCall creates a new instance of mockCreateCall. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockCreateCall(t mockConstructorTestingTnewMockCreateCall) *mockCreateCall {
	mock := &mockCreateCall{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
