// Code generated by mockery v2.16.0. DO NOT EDIT.

package googlechat

import (
	mock "github.com/stretchr/testify/mock"
	chat "google.golang.org/api/chat/v1"
)

// mockSpacesMessageCreator is an autogenerated mock type for the spacesMessageCreator type
type mockSpacesMessageCreator struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0, _a1
func (_m *mockSpacesMessageCreator) Create(_a0 string, _a1 *chat.Message) createCall {
	ret := _m.Called(_a0, _a1)

	var r0 createCall
	if rf, ok := ret.Get(0).(func(string, *chat.Message) createCall); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(createCall)
		}
	}

	return r0
}

type mockConstructorTestingTnewMockSpacesMessageCreator interface {
	mock.TestingT
	Cleanup(func())
}

// newMockSpacesMessageCreator creates a new instance of mockSpacesMessageCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockSpacesMessageCreator(t mockConstructorTestingTnewMockSpacesMessageCreator) *mockSpacesMessageCreator {
	mock := &mockSpacesMessageCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
